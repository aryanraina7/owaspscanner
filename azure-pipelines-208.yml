trigger:
- main  # Adjust to your branch

pool:
  name: ARM  # Self-hosted agent pool name

variables:
- group: 'owaspvariables'  # Reference to the variable group

stages:
- stage: VulnerabilityScanning
  displayName: 'Vulnerability Scanning (OWASP ZAP + Nmap)'
  jobs:
  - job: OWASPZAPScan
    displayName: 'Perform OWASP ZAP Vulnerability Scan'
    steps:
    - script: |
        echo "Checking Docker Version:"
        docker --version
        echo "Pulling OWASP ZAP Docker Image:"
        docker pull zaproxy/zap-stable
        echo "Running OWASP ZAP Scan with Increased Timeout:"
        # Run OWASP ZAP scan using variables from the group with increased timeout
        docker run --rm -v $(System.DefaultWorkingDirectory):/zap/wrk/:rw -t zaproxy/zap-stable zap-full-scan.py -t "$(TARGET_URL)" -r /zap/wrk/"$(HTML_REPORT_NAME)" -x /zap/wrk/"$(XML_REPORT_NAME)" -z "-timeout 60000" || true
      displayName: 'Run OWASP ZAP Scan'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(System.DefaultWorkingDirectory)/$(HTML_REPORT_NAME)'
        artifactName: 'ZAPReportHTML'
      displayName: 'Publish OWASP ZAP HTML Report'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(System.DefaultWorkingDirectory)/$(XML_REPORT_NAME)'
        artifactName: 'ZAPReportXML'
      displayName: 'Publish OWASP ZAP XML Report'

  - job: NmapScan
    displayName: 'Perform Nmap Scan'
    dependsOn: OWASPZAPScan  # Ensure Nmap scan runs after OWASP ZAP scan
    steps:
    - script: |
        echo "Checking Docker Version:"
        docker --version
        echo "Pulling Nmap Docker Image:"
        docker pull instrumentisto/nmap
        echo "Extracting Domain from TARGET_URL:"
        DOMAIN=$(echo "$(TARGET_URL)" | sed -E 's#^https?://##' | sed -E 's#/.*##')
        echo "Running Nmap Scan on Domain: $DOMAIN"
        # Run Nmap scan on the extracted domain and save output to the Azure Pipelines working directory
        docker run --rm -v $(System.DefaultWorkingDirectory):/nmap/ instrumentisto/nmap -sV "$DOMAIN" -oN /nmap/nmap_scan.txt || true
      displayName: 'Run Nmap Scan'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(System.DefaultWorkingDirectory)/nmap_scan.txt'
        artifactName: 'NmapReport'
      displayName: 'Publish Nmap Report'
